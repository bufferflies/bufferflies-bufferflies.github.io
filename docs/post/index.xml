<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on blog for bufferflies</title>
    <link>https://bufferflies.github.io/post/</link>
    <description>Recent content in Posts on blog for bufferflies</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>bufferflies</copyright>
    <lastBuildDate>Fri, 26 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://bufferflies.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>API 网关设计</title>
      <link>https://bufferflies.github.io/post/api-%E7%BD%91%E5%85%B3%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bufferflies.github.io/post/api-%E7%BD%91%E5%85%B3%E8%AE%BE%E8%AE%A1/</guid>
      <description>网关评审 需求 需要的能力： 路由 协议转换 服务发现 mertices监控 路由动态更新 支持OAuth2，LDAP身份认证 熔断 重试 流量控制 负载均衡 场景一</description>
    </item>
    
    <item>
      <title>API 网关设计 OAuth2</title>
      <link>https://bufferflies.github.io/post/api-%E7%BD%91%E5%85%B3-%E6%94%AF%E6%8C%81%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E9%99%86/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bufferflies.github.io/post/api-%E7%BD%91%E5%85%B3-%E6%94%AF%E6%8C%81%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E9%99%86/</guid>
      <description>领域模型 核心功能：为网关提供用户认证服务 提供的功能： 能够接入支持OAuth2的认证服务 用户登陆成功后可以跳转到之前访问的页面 领域图 storage request storage proxy storage</description>
    </item>
    
    <item>
      <title>API 网关设计 插件编写</title>
      <link>https://bufferflies.github.io/post/api-%E7%BD%91%E5%85%B3%E8%AE%BE%E8%AE%A1-%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bufferflies.github.io/post/api-%E7%BD%91%E5%85%B3%E8%AE%BE%E8%AE%A1-%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99/</guid>
      <description>trpc/http-gateway 需求：对外提供HTTP的转发功能 特性： 支持自定义的Filter和Predicate 兼容spring cloud gateway的配置 网关设计 storage predicate { storage PredicateFactory</description>
    </item>
    
    <item>
      <title>一次OkHTTP3 网络排查</title>
      <link>https://bufferflies.github.io/post/%E7%BD%91%E7%BB%9C%E6%8E%92%E6%9F%A5-okhttp/</link>
      <pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bufferflies.github.io/post/%E7%BD%91%E7%BB%9C%E6%8E%92%E6%9F%A5-okhttp/</guid>
      <description>记一次http pipeline异常 背景 服务依赖关系 storage Client{ storage OkHttp storage Netty } storage Server{ storage Control storage Tomcat } OkHttp-&amp;gt;Netty Netty.&amp;gt;Tomcat Tomcat -&amp;gt; Control 现象 每天偶现5次左右API调用返回400现象, 查询S</description>
    </item>
    
    <item>
      <title>zsh</title>
      <link>https://bufferflies.github.io/post/zsh-%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sat, 20 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bufferflies.github.io/post/zsh-%E5%AE%89%E8%A3%85/</guid>
      <description>安装oh-my-zsh sh -c &amp;quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&amp;quot; 安装插件 进入oh-my-zsh插件库中 cd ~/.oh-my-zsh/custom/plugins/ 下载插件（自动补全为例） git clone git://github.com/zsh-users/zsh-autosuggestions 其实插件名就是仓库名（zsh-aut</description>
    </item>
    
    <item>
      <title>网络基础</title>
      <link>https://bufferflies.github.io/post/%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Thu, 05 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bufferflies.github.io/post/%E7%BD%91%E7%BB%9C/</guid>
      <description>网络基础协议</description>
    </item>
    
    <item>
      <title>webflux源码设计1</title>
      <link>https://bufferflies.github.io/post/webflux%E8%A7%A3%E6%9E%901/</link>
      <pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bufferflies.github.io/post/webflux%E8%A7%A3%E6%9E%901/</guid>
      <description>Spring5 WebFlux 源码解析（一） 场景： 能够将请求适配到指定方法，调用方法并返回 领域图 storage Request as W storage HandlerMapping as M storage HandlerAdapter as A storage HandlerResultHandler as R entity Result as E control Handler as C W -&amp;gt; M: trigger M -&amp;gt; C: find E -&amp;gt; R:</description>
    </item>
    
    <item>
      <title>webflux源码设计2</title>
      <link>https://bufferflies.github.io/post/webflux%E8%A7%A3%E6%9E%902/</link>
      <pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bufferflies.github.io/post/webflux%E8%A7%A3%E6%9E%902/</guid>
      <description>核心类图 class RouterFunction { RouteFunction routeFunction; 路由执行器 List&amp;lt;HttpMessageReader&amp;lt;?&amp;gt;&amp;gt; messageReaders; request阅读器 getHandlerInternal(ServerWebExchange ex): HandlerFunction 获取对应的执行器 } class HandlerFunctionAdapter { supports(Object handler): boolean 只支持HandlerFunction 的函数 handler(ServerWebExchange ex,Object handler): HandlerResult 执</description>
    </item>
    
  </channel>
</rss>
